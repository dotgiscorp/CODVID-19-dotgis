{"version":3,"sources":["../node_modules/@carto/airship-components/dist/esm-es5/as-range-slider.entry.js"],"names":["RangeSlider","class_1","hostRef","registerInstance","this","minValue","maxValue","step","disabled","draggable","isDraggable","showThumb","showThumbCaption","thumbs","change","createEvent","changeStart","changeEnd","prototype","validateValue","newValue","_isBetweenValidValues","Error","_updateThumbs","validateRange","newRange","_this","length","map","value","componentWillLoad","_validateValues","componentDidRender","_checkLabelOverflow","componentDidLoad","checkThumbCollision","render","cssClasses","h","class","thumb","_renderThumb","_renderRangeBar","_renderCollapsedLabel","_getLabelOffsetPercentage","difference","percentage","_createThumbs","valueMin","valueMax","formatValue","showCaption","_shouldShowCaption","onThumbMove","event","_onThumbMove","detail","onThumbIncrease","_onKeyboardThumbMove","onThumbDecrease","onThumbChangeStart","_emitChangeIn","onThumbChangeEnd","onThumbRender","_a","_getCurrentThumbPercentages","firstThumbPercentage","lastThumbPercentage","undefined","range","rangeStartPercentage","rangeEndPercentage","stepPercentage","_getStepPercentage","onBarChangeStart","onBarChangeEnd","onBarMove","_onBarMove","labelOffsetPercentage","thumbsBalancedLeft","positionStyles","left","classes","areLabelsColliding","isLeftLabelOverflowing","isRightLabelOverflowing","style","_sliderHasRange","_getThumbData","_clampThumbValues","_getPercentage","direction","leftThumb","rightThumb","isLeftThumb","isRightThumb","_getValueFromPercentage","stepValue","_getStepValue","slice","p","eventEmitterInstance","values","emit","Math","min","max","round","roundToStep","numberToRound","Number","parseFloat","toFixed","decimalNumber","numberToCheck","count","pow","abs","isFinite","getDecimalPlaces","thumbLabels","element","querySelectorAll","leftLabelOverflows","checkOverflowInParentContainer","overflow","rightLabelOverflows","a","b","margin","leftThumbLabel","rightThumbLabel","leftThumbLabelCR","getBoundingClientRect","rightThumbLabelCR","y","height","x","width","labelElement","containerBCR","parentElement","labelBCR","isOverflowingLeft","isOverflowingRight","right","Object","defineProperty","get","getElement","enumerable","configurable"],"mappings":"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","file":"static/js/45.c98c0bfb.chunk.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './core-a69618da.js';\nfunction getDecimalPlaces(decimalNumber) {\n    // Copied this method from: https://bit.ly/2DfxbfQ\n    function hasFraction(numberToCheck) {\n        return Math.abs(Math.round(numberToCheck) - numberToCheck) > 1e-10;\n    }\n    var count = 0;\n    // multiply by increasing powers of 10 until the fractional part is ~ 0\n    while (hasFraction(decimalNumber * (Math.pow(10, count))) && isFinite(Math.pow(10, count))) {\n        count++;\n    }\n    return count;\n}\nvar RangeSlider = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Bottom limit of the range.\n         * You cannot drag your slider below this value. By default the value is 0.\n         *\n         * @type {number}\n         * @memberof RangeSlider\n         */\n        this.minValue = 0;\n        /**\n         * Top limit of the range.\n         * You cannot drag your slider beyond this value. By default the value is 10.\n         *\n         * @type {number}\n         * @memberof RangeSlider\n         */\n        this.maxValue = 10;\n        /**\n         * Increment/decrement step of the slider.\n         * You can change the step setting a different number to this property. Defaults to 1.\n         *\n         * @type {number}\n         * @memberof RangeSlider\n         */\n        this.step = 1;\n        /**\n         * Disables component if truthy\n         *\n         * @type {boolean}\n         * @memberof RangeSlider\n         */\n        this.disabled = false;\n        /**\n         * @deprecated Use isDraggable instead\n         * @type {boolean}\n         * @memberof RangeSlider\n         */\n        this.draggable = false;\n        /**\n         * If this property is set to true, and it has multiple value, you can drag the entire track.\n         *\n         * @type {number}\n         * @memberof RangeSlider\n         */\n        this.isDraggable = false;\n        /**\n         * Disables the range slider thumb\n         *\n         * @type {boolean}\n         * @memberof RangeSlider\n         */\n        this.showThumb = true;\n        /**\n         * Disables the range slider thumb caption\n         *\n         * @type {boolean}\n         * @memberof RangeSlider\n         */\n        this.showThumbCaption = true;\n        this.thumbs = [];\n        this.change = createEvent(this, \"change\", 7);\n        this.changeStart = createEvent(this, \"changeStart\", 7);\n        this.changeEnd = createEvent(this, \"changeEnd\", 7);\n    }\n    class_1.prototype.validateValue = function (newValue) {\n        if (!this._isBetweenValidValues(newValue)) {\n            throw new Error(\"RangeSlider: Value \" + newValue + \" has to be between \" +\n                (\"minValue (\" + this.minValue + \") and maxValue (\" + this.maxValue + \")\"));\n        }\n        this._updateThumbs();\n    };\n    class_1.prototype.validateRange = function (newRange) {\n        var _this = this;\n        if (newRange.length !== 2) {\n            throw new Error(\"RangeSlider: Range \" + newRange + \" need two values at most\");\n        }\n        newRange.map(function (value) { return _this.validateValue(value); });\n        this._updateThumbs();\n    };\n    class_1.prototype.componentWillLoad = function () {\n        this._validateValues();\n        this._updateThumbs();\n    };\n    class_1.prototype.componentDidRender = function () {\n        this._checkLabelOverflow();\n    };\n    class_1.prototype.componentDidLoad = function () {\n        this.checkThumbCollision();\n    };\n    class_1.prototype.render = function () {\n        var _this = this;\n        if (this.thumbs.length < 1) {\n            return;\n        }\n        var cssClasses = {\n            'as-range-slider': true,\n            'as-range-slider--disabled': this.disabled\n        };\n        return (h(\"div\", { class: cssClasses }, h(\"div\", { class: 'as-range-slider__rail' }, this.thumbs.map(function (thumb) { return _this._renderThumb(thumb); }), this._renderRangeBar(), this._renderCollapsedLabel())));\n    };\n    class_1.prototype._getLabelOffsetPercentage = function () {\n        var difference = this.thumbs[1].percentage - this.thumbs[0].percentage;\n        return this.thumbs[0].percentage + (difference / 2);\n    };\n    class_1.prototype._updateThumbs = function () {\n        this.thumbs = this._createThumbs();\n    };\n    class_1.prototype._renderThumb = function (thumb) {\n        var _this = this;\n        if (this.showThumb) {\n            return h(\"as-range-slider-thumb\", { value: thumb.value, valueMin: thumb.valueMin, valueMax: thumb.valueMax, percentage: thumb.percentage, disabled: this.disabled, formatValue: this.formatValue, showCaption: this._shouldShowCaption(), onThumbMove: function (event) { return _this._onThumbMove(thumb, event.detail); }, onThumbIncrease: function () { return _this._onKeyboardThumbMove(thumb, +1); }, onThumbDecrease: function () { return _this._onKeyboardThumbMove(thumb, -1); }, onThumbChangeStart: function () { return _this._emitChangeIn(_this.changeStart); }, onThumbChangeEnd: function () { return _this._emitChangeIn(_this.changeEnd); }, onThumbRender: function () { return _this.checkThumbCollision(); } });\n        }\n    };\n    class_1.prototype._renderRangeBar = function () {\n        var _this = this;\n        var _a = this._getCurrentThumbPercentages(), firstThumbPercentage = _a[0], lastThumbPercentage = _a[1];\n        var isDraggable = (this.isDraggable || this.draggable) && this.range !== undefined;\n        return h(\"as-range-slider-bar\", { rangeStartPercentage: firstThumbPercentage, rangeEndPercentage: lastThumbPercentage, isDraggable: isDraggable, disabled: this.disabled, stepPercentage: this._getStepPercentage(), onBarChangeStart: function () { return _this._emitChangeIn(_this.changeStart); }, onBarChangeEnd: function () { return _this._emitChangeIn(_this.changeEnd); }, onBarMove: function (event) { return _this._onBarMove(event); } });\n    };\n    class_1.prototype._renderCollapsedLabel = function () {\n        if (this.thumbs.length !== 2) {\n            return;\n        }\n        var defaultFormatValue = function (value) { return value; };\n        var formatValue = this.formatValue || defaultFormatValue;\n        var labelOffsetPercentage = this._getLabelOffsetPercentage();\n        var thumbsBalancedLeft = this.thumbs[0].percentage < 50;\n        var positionStyles = {\n            left: labelOffsetPercentage + \"%\"\n        };\n        var classes = {\n            'as-caption': true,\n            'as-font-medium': true,\n            'as-range-slider__rail-label': true,\n            'as-range-slider__rail-label--active': this.areLabelsColliding,\n            'as-range-slider__rail-label__overflow--left': this.isLeftLabelOverflowing && thumbsBalancedLeft,\n            'as-range-slider__rail-label__overflow--right': this.isRightLabelOverflowing && !thumbsBalancedLeft\n        };\n        return (h(\"div\", { class: classes, style: positionStyles }, formatValue(this.thumbs[0].value), h(\"span\", { class: 'as-range-slider__label-separator' }, \"\\u2014\"), formatValue(this.thumbs[1].value)));\n    };\n    class_1.prototype._getCurrentThumbPercentages = function () {\n        var firstThumbPercentage = this._sliderHasRange() ? this.thumbs[0].percentage : 0;\n        var lastThumbPercentage = this.thumbs[this.thumbs.length - 1].percentage;\n        return [firstThumbPercentage, lastThumbPercentage];\n    };\n    class_1.prototype._shouldShowCaption = function () {\n        return !this.areLabelsColliding && this.showThumbCaption;\n    };\n    class_1.prototype._validateValues = function () {\n        if (this.value) {\n            this.validateValue(this.value);\n            return;\n        }\n        if (this.range) {\n            this.validateRange(this.range);\n            return;\n        }\n    };\n    class_1.prototype._createThumbs = function () {\n        var _this = this;\n        var hasRangeValues = this.range && this.range.length;\n        if (!hasRangeValues) {\n            return [this._getThumbData(this.value)];\n        }\n        var thumbs = this.range.map(function (value) { return _this._getThumbData(value); });\n        this._clampThumbValues(thumbs);\n        return thumbs;\n    };\n    class_1.prototype._getThumbData = function (value) {\n        return {\n            percentage: this._isBetweenValidValues(value) ?\n                this._getPercentage(value)\n                : this._getPercentage(this.minValue),\n            value: this._isBetweenValidValues(value) ? value : this.minValue,\n            valueMax: this.maxValue,\n            valueMin: this.minValue\n        };\n    };\n    class_1.prototype._isBetweenValidValues = function (value) {\n        return value >= this.minValue && value <= this.maxValue;\n    };\n    class_1.prototype._sliderHasRange = function () {\n        return this.range && this.range.length === 2;\n    };\n    class_1.prototype._onKeyboardThumbMove = function (thumb, direction) {\n        var percentage = this._getPercentage(thumb.value + (direction * this.step));\n        if (percentage < 0 || percentage > 100) {\n            return;\n        }\n        this._onThumbMove(thumb, percentage);\n    };\n    class_1.prototype._onThumbMove = function (thumb, percentage) {\n        var _a = this.thumbs, leftThumb = _a[0], rightThumb = _a[1];\n        var isLeftThumb = leftThumb === thumb;\n        var isRightThumb = rightThumb === thumb;\n        var value = this._getValueFromPercentage(percentage);\n        var stepValue = this._getStepValue(value);\n        var stepPercentage = this._getPercentage(stepValue);\n        var valueMin = this.minValue;\n        var valueMax = this.maxValue;\n        if (this._sliderHasRange() && isLeftThumb) {\n            valueMax = (rightThumb.value - this.step);\n            if (valueMax < stepValue) {\n                return;\n            }\n        }\n        if (this._sliderHasRange() && isRightThumb) {\n            valueMin = (leftThumb.value + this.step);\n            if (valueMin > stepValue) {\n                return;\n            }\n        }\n        thumb.value = stepValue;\n        thumb.valueMin = valueMin;\n        thumb.valueMax = valueMax;\n        thumb.percentage = stepPercentage;\n        this.thumbs = this.thumbs.slice();\n        this._emitChangeIn(this.change);\n    };\n    class_1.prototype._onBarMove = function (percentage) {\n        var _this = this;\n        var percentageRange = percentage.detail;\n        var rangeValues = percentageRange.map(function (p) { return _this._getValueFromPercentage(p); });\n        var stepValues = rangeValues.map(function (value) { return _this._getStepValue(value); });\n        var thumbs = stepValues.map(function (stepValue) { return ({\n            percentage: _this._getPercentage(stepValue),\n            value: stepValue\n        }); });\n        this._clampThumbValues(thumbs);\n        this.thumbs = thumbs.slice();\n        this._emitChangeIn(this.change);\n    };\n    class_1.prototype._emitChangeIn = function (eventEmitterInstance) {\n        var values = this.thumbs.map(function (thumb) { return thumb.value; });\n        return eventEmitterInstance.emit(values);\n    };\n    class_1.prototype._getPercentage = function (value) {\n        return ((value - this.minValue) / (this.maxValue - this.minValue)) * 100;\n    };\n    class_1.prototype._getValueFromPercentage = function (percentage) {\n        return ((percentage * (this.maxValue - this.minValue)) / 100) + this.minValue;\n    };\n    class_1.prototype._getStepPercentage = function () {\n        var range = (this.maxValue - this.minValue);\n        return this.step * 100 / range;\n    };\n    class_1.prototype._clampThumbValues = function (thumbs) {\n        var leftThumb = thumbs[0], rightThumb = thumbs[1];\n        leftThumb.valueMin = this.minValue;\n        leftThumb.valueMax = Math.min(rightThumb.value - this.step, this.maxValue);\n        rightThumb.valueMin = Math.max(this.minValue, leftThumb.value + this.step);\n        rightThumb.valueMax = this.maxValue;\n    };\n    class_1.prototype._getStepValue = function (value) {\n        var stepValue = Math.max(this.minValue, Math.round(value / this.step) * this.step);\n        return this.roundToStep(stepValue, this.step);\n    };\n    class_1.prototype.roundToStep = function (numberToRound, step) {\n        return Number.parseFloat(numberToRound.toFixed(getDecimalPlaces(step)));\n    };\n    class_1.prototype._checkLabelOverflow = function () {\n        var thumbLabels = this.element.querySelectorAll('as-range-slider-thumb .as-range-slider__value');\n        if (thumbLabels) {\n            var leftLabelOverflows = this.checkOverflowInParentContainer(thumbLabels[0]).overflow;\n            var rightLabelOverflows = ((thumbLabels.length > 1)\n                ? this.checkOverflowInParentContainer(thumbLabels[1])\n                : { overflow: false }).overflow;\n            this.isLeftLabelOverflowing = leftLabelOverflows;\n            this.isRightLabelOverflowing = rightLabelOverflows;\n        }\n    };\n    class_1.prototype.checkThumbCollision = function () {\n        var thumbLabels = this.element.querySelectorAll('as-range-slider-thumb .as-range-slider__value');\n        if (!thumbLabels || thumbLabels.length !== 2) {\n            return;\n        }\n        var leftThumbLabel = thumbLabels[0];\n        var rightThumbLabel = thumbLabels[1];\n        var leftThumbLabelCR = leftThumbLabel.getBoundingClientRect();\n        var rightThumbLabelCR = rightThumbLabel.getBoundingClientRect();\n        this.areLabelsColliding = isColliding(leftThumbLabelCR, rightThumbLabelCR, 8);\n    };\n    class_1.prototype.checkOverflowInParentContainer = function (labelElement) {\n        if (labelElement) {\n            var containerElement = this.element.parentElement;\n            var containerBCR = containerElement.getBoundingClientRect();\n            var labelBCR = labelElement.getBoundingClientRect();\n            var isOverflowingLeft = containerBCR.left > labelBCR.left;\n            var isOverflowingRight = containerBCR.right < labelBCR.left + labelBCR.width;\n            return {\n                left: isOverflowingLeft,\n                overflow: isOverflowingLeft || isOverflowingRight,\n                right: isOverflowingRight\n            };\n        }\n        return {\n            left: false,\n            overflow: false,\n            right: false\n        };\n    };\n    Object.defineProperty(class_1.prototype, \"element\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"value\": [\"validateValue\"],\n                \"range\": [\"validateRange\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \"as-range-slider{--as--range-slider--rail-color:var(--as--color--ui-03,#e2e6e3);--as--range-slider--range-color:var(--as--color--primary,#1785fb);display:block;height:32px}as-range-slider .as-range-slider--disabled{pointer-events:none}as-range-slider .as-range-slider__rail{display:-ms-flexbox;display:flex;position:relative;width:calc(100% - 12px);height:12px;margin:auto}as-range-slider .as-range-slider__rail:before{content:\\\" \\\";position:absolute;z-index:0;top:50%;left:0;width:100%;height:2px;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0);background-color:var(--as--range-slider--rail-color,#e2e6e3);pointer-events:none}as-range-slider .as-range-slider__rail-label{visibility:hidden;position:absolute;top:16px;-webkit-transform:translate3d(-50%,0,0);transform:translate3d(-50%,0,0);white-space:nowrap}as-range-slider .as-range-slider__rail-label.as-range-slider__rail-label__overflow--left{-webkit-transform:translate3d(-6px,0,0);transform:translate3d(-6px,0,0)}as-range-slider .as-range-slider__rail-label.as-range-slider__rail-label__overflow--right{-webkit-transform:translate3d(calc(-100% + 6px),0,0);transform:translate3d(calc(-100% + 6px),0,0)}as-range-slider .as-range-slider__rail-label .as-range-slider__label-separator{display:inline-block;width:8px;-webkit-transition:opacity .2s ease-in;transition:opacity .2s ease-in;opacity:0;text-align:center}as-range-slider .as-range-slider__rail-label.as-range-slider__rail-label--active{visibility:visible}as-range-slider .as-range-slider__rail-label.as-range-slider__rail-label--active .as-range-slider__label-separator{opacity:1}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nfunction isColliding(a, b, margin) {\n    return !(((a.y + a.height) < (b.y)) ||\n        (a.y > (b.y + b.height)) ||\n        ((a.x + a.width + margin) < b.x) ||\n        (a.x > (b.x + b.width + margin)));\n}\nexport { RangeSlider as as_range_slider };\n"],"sourceRoot":""}