{"version":3,"sources":["../node_modules/@carto/airship-components/dist/esm-es5/as-legend-size-bins-point.entry.js","../node_modules/@carto/airship-components/dist/esm-es5/border-style-counts-8a3a8717.js"],"names":["LegendSizeBinsPoint","class_1","hostRef","registerInstance","this","orientation","width","prototype","render","_a","_this","data","classes","maxSize","slice","sort","first","second","h","class","map","renderStep","strokeStyle","FAKE_BORDER_SIZE","strokeColor","sizeOffset","borderStyleCounts","SIZE","Math","round","SIZE_PX","MAX_SIZE_PX","mask","getMask","wrapperStyle","height","style","Object","assign","backgroundColor","color","border","label","marker","defineProperty","get","enumerable","configurable","borderStyle","indexOf"],"mappings":"qHAAA,sFAKIA,EAAqC,WACrC,SAASC,EAAQC,GACbC,YAAiBC,KAAMF,GACvBE,KAAKC,YAAc,WACnBD,KAAKE,MAAQ,KAyDjB,OAvDAL,EAAQM,UAAUC,OAAS,WACvB,IAAIC,EACAC,EAAQN,KACZ,IAAKA,KAAKO,KACN,OAAO,KAEX,IAAIC,IAAWH,EAAK,CACZ,oCAAoC,IAErC,8BAAgCL,KAAKC,cAAe,EACvDI,GAEJ,OADAL,KAAKS,QAAUT,KAAKE,OAASF,KAAKO,KAAKG,QAAQC,MAAK,SAAUC,EAAOC,GAAU,OAAOA,EAAOX,MAAQU,EAAMV,SAAU,GAAGA,MACjHY,YAAE,MAAO,CAAEC,MAAOP,GAAWR,KAAKO,KAAKS,KAAI,SAAUT,GAAQ,OAAOD,EAAMW,WAAWV,QAEhGV,EAAQM,UAAUc,WAAa,SAAUV,GACrC,IAAIW,EAAcC,QAA4BZ,EAAKW,aAAe,SAAW,IAAMX,EAAKa,YAEpFC,EAAaC,YAAkBf,EAAKW,aAClCC,EACA,EACFI,EAAOC,KAAKC,MAAMlB,EAAKL,OAASmB,EAChCK,EAAUH,EAAO,KAEjBI,GADWJ,EAAOvB,KAAKS,QAAUc,EAAOvB,KAAKS,QAAUY,GAC9B,KACzBO,EAAO5B,KAAK6B,QAAQtB,GACpBuB,EAAe,GACM,eAArB9B,KAAKC,YACL6B,EAAaC,OAASJ,EAEI,aAArB3B,KAAKC,cACV6B,EAAa5B,MAAQyB,GAEzB,IAAIK,EAAQC,OAAOC,OAAO,CAAEC,gBAAiB5B,EAAK6B,MAAOC,OAAQnB,EAAaa,OAAQL,EAASxB,MAAOwB,GAAWE,GACjH,OAAQd,YAAE,MAAO,CAAEC,MAAO,mCAAqCD,YAAE,MAAO,CAAEkB,MAAOF,EAAcf,MAAO,6CAA+CD,YAAE,MAAO,CAAEC,MAAO,oCAAqCiB,MAAOA,KAAWlB,YAAE,OAAQ,CAAEC,MAAO,oCAAsCR,EAAK+B,SAEhSzC,EAAQM,UAAU0B,QAAU,SAAUtB,GAClC,OAAKA,EAAKgC,OAGH,CACH,qBAAsB,OAAShC,EAAKgC,OAAS,IAC7C,wBAAyB,SACzB,sBAAuB,YACvB,oBAAqBhC,EAAKL,MAAQ,KAClC,UAAa,OAASK,EAAKgC,OAAS,IACpC,aAAgB,SAChB,WAAc,YACd,SAAYhC,EAAKL,MAAQ,MAVlB,IAaf+B,OAAOO,eAAe3C,EAAS,QAAS,CACpC4C,IAAK,WAAc,MAAO,muEAC1BC,YAAY,EACZC,cAAc,IAEX9C,EA7D8B,I,iCCLzC,SAASyB,EAAkBsB,GACvB,OAAmF,IAA5E,CAAC,OAAQ,UAAW,UAAW,SAAU,SAASC,QAAQD,GADrE","file":"static/js/11.73fc17df.chunk.js","sourcesContent":["import { r as registerInstance, h } from './core-a69618da.js';\nimport { b as borderStyleCounts } from './border-style-counts-8a3a8717.js';\n// This component ignores the strokeWidth property, and always paints\n// a 1px border.\nvar FAKE_BORDER_SIZE = 1;\nvar LegendSizeBinsPoint = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.orientation = 'vertical';\n        this.width = null;\n    }\n    class_1.prototype.render = function () {\n        var _a;\n        var _this = this;\n        if (!this.data) {\n            return null;\n        }\n        var classes = (_a = {\n                'as-legend-size-bins-point--steps': true\n            },\n            _a[\"as-legend-size-bins-point--\" + this.orientation] = true,\n            _a);\n        this.maxSize = this.width || this.data.slice().sort(function (first, second) { return second.width - first.width; })[0].width;\n        return h(\"div\", { class: classes }, this.data.map(function (data) { return _this.renderStep(data); }));\n    };\n    class_1.prototype.renderStep = function (data) {\n        var strokeStyle = FAKE_BORDER_SIZE + \"px \" + (data.strokeStyle || 'solid') + \" \" + data.strokeColor;\n        // Elements are box-sizing: border-box, so we have to compensate\n        var sizeOffset = borderStyleCounts(data.strokeStyle)\n            ? FAKE_BORDER_SIZE * 2\n            : 0;\n        var SIZE = Math.round(data.width) + sizeOffset;\n        var SIZE_PX = SIZE + \"px\";\n        var MAX_SIZE = SIZE > this.maxSize ? SIZE : this.maxSize + sizeOffset;\n        var MAX_SIZE_PX = MAX_SIZE + \"px\";\n        var mask = this.getMask(data);\n        var wrapperStyle = {};\n        if (this.orientation === 'horizontal') {\n            wrapperStyle.height = MAX_SIZE_PX;\n        }\n        else if (this.orientation === 'vertical') {\n            wrapperStyle.width = MAX_SIZE_PX;\n        }\n        var style = Object.assign({ backgroundColor: data.color, border: strokeStyle, height: SIZE_PX, width: SIZE_PX }, mask);\n        return (h(\"div\", { class: 'as-legend-size-bins-point--step' }, h(\"div\", { style: wrapperStyle, class: 'as-legend-size-bins-point--circle-wrapper' }, h(\"div\", { class: 'as-legend-size-bins-point--circle', style: style })), h(\"span\", { class: 'as-legend-size-bins-point--label' }, data.label)));\n    };\n    class_1.prototype.getMask = function (data) {\n        if (!data.marker) {\n            return {};\n        }\n        return {\n            '-webkit-mask-image': \"url(\" + data.marker + \")\",\n            '-webkit-mask-position': 'center',\n            '-webkit-mask-repeat': 'no-repeat',\n            '-webkit-mask-size': data.width + \"px\",\n            'maskImage': \"url(\" + data.marker + \")\",\n            'maskPosition': 'center',\n            'maskRepeat': 'no-repeat',\n            'maskSize': data.width + \"px\"\n        };\n    };\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \"as-legend-size-bins-point{--as-legend-size-bins-point--color:var(--as--color--type-01);--as-legend-size-bins-point--shadow:rgba(0,0,0,0.1);display:block}as-legend-size-bins-point .as-legend-size-bins-point--steps{display:-ms-flexbox;display:flex}as-legend-size-bins-point .as-legend-size-bins-point--step{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}as-legend-size-bins-point .as-legend-size-bins-point--circle{border-radius:50%;-webkit-box-shadow:-1px 0 2px 0 var(--as-legend-size-bins-point--shadow);box-shadow:-1px 0 2px 0 var(--as-legend-size-bins-point--shadow)}as-legend-size-bins-point .as-legend-size-bins-point--circle-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}as-legend-size-bins-point .as-legend-size-bins-point--label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;color:var(--as-legend-size-bins-point--color);font:var(--as--font--caption);text-transform:capitalize;white-space:nowrap}as-legend-size-bins-point .as-legend-size-bins-point--horizontal{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:distribute;justify-content:space-around}as-legend-size-bins-point .as-legend-size-bins-point--horizontal .as-legend-size-bins-point--step{-ms-flex-direction:column;flex-direction:column;margin:0 4px}as-legend-size-bins-point .as-legend-size-bins-point--horizontal .as-legend-size-bins-point--step:first-of-type{margin-left:0}as-legend-size-bins-point .as-legend-size-bins-point--horizontal .as-legend-size-bins-point--step:last-of-type{margin-right:0}as-legend-size-bins-point .as-legend-size-bins-point--horizontal .as-legend-size-bins-point--label{margin-top:8px}as-legend-size-bins-point .as-legend-size-bins-point--horizontal .as-legend-size-bins-point--circle-wrapper{-ms-flex-align:end;align-items:flex-end}as-legend-size-bins-point .as-legend-size-bins-point--vertical{-ms-flex-direction:column;flex-direction:column}as-legend-size-bins-point .as-legend-size-bins-point--vertical .as-legend-size-bins-point--label{margin-left:8px}as-legend-size-bins-point .as-legend-size-bins-point--vertical .as-legend-size-bins-point--step:not(:first-of-type){margin-top:8px}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nexport { LegendSizeBinsPoint as as_legend_size_bins_point };\n","function borderStyleCounts(borderStyle) {\n    return ['none', 'initial', 'inherit', 'hidden', 'unset'].indexOf(borderStyle) === -1;\n}\nexport { borderStyleCounts as b };\n"],"sourceRoot":""}