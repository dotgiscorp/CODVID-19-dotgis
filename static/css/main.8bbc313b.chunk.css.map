{"version":3,"sources":["index.css","style.scss","../../../styles/_mixins.scss"],"names":[],"mappings":"AAAA,KACE,QAAS,CACT,mJAEY,CACZ,kCAAmC,CACnC,iCACF,CAEA,KACE,yEAEF,CCZA,QACI,iBAAkB,CAClB,4BAAiC,CACjC,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,KAAM,CACN,OAAQ,CACR,QAAS,CACT,MAAO,CACP,SAAU,CACV,SAAU,CACV,sBAAyB,CACzB,mBAAoB,CAEpB,eACI,YAAa,CACb,SAAU,CACb,qBAID,UAAW,CACX,WAAY,CACf,wBAGG,UAAW,CACX,WAAY,CACZ,2CAAA,CAAA,mCAAoC,CACvC,qBAGG,0BAAgC,CAChC,oBAAqB,CACrB,gDAAyC,CAAzC,wCAAyC,CACzC,gBACJ,CAAC,wBAGC,GACE,sBAAwB,CACxB,mBACF,CAEA,IACE,uBAAyB,CACzB,qBACF,CAEA,GACE,uBAAyB,CACzB,sBACF,CAAA,CAhBD,gBAGC,GACE,sBAAwB,CACxB,mBACF,CAEA,IACE,uBAAyB,CACzB,qBACF,CAEA,GACE,uBAAyB,CACzB,sBACF,CAAA,CAGF,0BACE,GACE,uBAAyB,CAAA,CAF7B,kBACE,GACE,uBAAyB,CAAA,CAtD5B,uDAGC,YAAa,CACd,wBAGC,kCAA4C,CAC5C,oBAAuB,CACvB,kCAAoC,CACpC,yBAA2B,CAC3B,qBAAuB,CACvB,yBAA2B,CAC3B,6BAA+B,CAChC,oBAGC,YAAa,CACd,gBAgBC,YAAa,CACb,qEAAwE,CACxE,8CAA8C,CAC9C,eAAgB,CCoDhB,oBDnD6B,CAE7B,wBAEE,eAAgB,CAChB,qBAAsB,CAjBtB,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,cALU,CAGZ,0BACE,iBAcwB,CAbxB,eALU,CAGZ,2BACE,iBAcwB,CAbxB,eALU,CAGZ,2BACE,iBAcwB,CAbxB,eALU,CAGZ,2BACE,iBAcwB,CAbxB,eALU,CAGZ,2BACE,iBAcwB,CAbxB,eALU,CAGZ,2BACE,iBAcwB,CAbxB,eALU,CAMX,yBAmBD,aAAgB,CAChB,iBAAkB,CAvBlB,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,cALU,CAGZ,2BACE,iBAoBwB,CAnBxB,eALU,CAGZ,4BACE,iBAoBwB,CAnBxB,eALU,CAGZ,4BACE,iBAoBwB,CAnBxB,eALU,CAGZ,4BACE,iBAoBwB,CAnBxB,eALU,CAGZ,4BACE,iBAoBwB,CAnBxB,eALU,CAGZ,4BACE,iBAoBwB,CAnBxB,eALU,CAMX,0CAuBC,mBAAoB,CACpB,eAAgB,CAPnB,2CAWG,eAAgB,CA3DtB,eCsBE,YAAa,CA2Bb,qBDhDiC,CCwEjC,sBDxEyC,CC0FzC,sBD1FqD,CACnD,iBAAkB,CAClB,QAAS,CACT,UAAW,CACX,qBAAuB,CACvB,cAAe,CACf,oBAAqB,CACrB,SAAU","file":"main.8bbc313b.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","@import '../../../styles/mixins.scss';\n\n.layers-picker {\n    @include flex-definition(column, center, flex-start);\n    position: absolute;\n    top: 2rem;\n    right: 2rem;\n    background-color: white;\n    padding: .75rem;\n    border-radius: .25rem;\n    z-index: 2;\n}\n","$mobile-breakpoint: 414px;\n$tablet-breakpoint: 812px;\n\n@mixin respond-to($media) {\n  @if $media == wide-desktop-screens {\n    @media only screen and (min-width: 1400px) {\n      @content;\n    }\n  } @else if $media == tablet {\n    @media only screen and (max-width: $tablet-breakpoint) {\n      @content;\n    }\n  } @else if $media == mobile {\n    @media only screen and (max-width: $mobile-breakpoint) {\n      @content;\n    }\n  }\n}\n\n@mixin flex() {\n  display: -webkit-box; \n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex; \n  display: flex;\n}\n\n@mixin direction($value) {\n  @if $value == row-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: horizontal;\n    -moz-box-direction: reverse;\n    -moz-box-orient: horizontal;\n  } @else if $value == column {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: vertical;\n    -moz-box-direction: normal;\n    -moz-box-orient: vertical;\n  } @else if $value == column-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: vertical;\n    -moz-box-direction: reverse;\n    -moz-box-orient: vertical;\n  } @else {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -moz-box-direction: normal;\n    -moz-box-orient: horizontal;\n  }\n  -webkit-flex-direction: $value;\n  -ms-flex-direction: $value;\n  flex-direction: $value;\n}\n\n@mixin justify($value) {\n  @if $value == flex-start {\n    -webkit-box-pack: start;\n    -moz-box-pack: start;\n    -ms-flex-pack: start;\n  } @else if $value == flex-end {\n    -webkit-box-pack: end;\n    -moz-box-pack: end;\n    -ms-flex-pack: end;\n  } @else if $value == space-between {\n    -webkit-box-pack: justify;\n    -moz-box-pack: justify;\n    -ms-flex-pack: justify;\n  } @else if $value == space-around {\n    -ms-flex-pack: distribute;\n  } @else {\n    -webkit-box-pack: $value;\n    -moz-box-pack: $value;\n    -ms-flex-pack: $value;\n  }\n  -webkit-justify-content: $value;\n  justify-content: $value;\n}\n\n@mixin align-items($value) {\n  @if $value == flex-start {\n    -webkit-box-align: start;\n    -moz-box-align: start;\n    -ms-flex-align: start;\n  } @else if $value == flex-end {\n    -webkit-box-align: end;\n    -moz-box-align: end;\n    -ms-flex-align: end;\n  } @else {\n    -webkit-box-align: $value;\n    -moz-box-align: $value;\n    -ms-flex-align: $value;\n  }\n  -webkit-align-items: $value;\n  align-items: $value;\n}\n\n@mixin align-content($value) {\n  -webkit-align-content: $value;\n  @if $value == flex-start {\n    -ms-flex-line-pack: start;\n  } @else if $value == flex-end {\n    -ms-flex-line-pack: end;\n  } @else {\n    -ms-flex-line-pack: $value;\n  }\n  align-content: $value;\n}\n\n@mixin align-self($value) {\n  -webkit-align-self: $value;\n  @if $value == flex-start {\n    -ms-flex-item-align: start;\n  } @else if $value == flex-end {\n    -ms-flex-item-align: end;\n  } @else {\n    -ms-flex-item-align: $value;\n  }\n  align-self: $value;\n}\n\n@mixin flex-definition($direction, $justify, $align) {\n  @include flex();\n  \n  @if $direction {\n    @include direction($direction);\n  }\n\n  @if $justify {\n    @include justify($justify);\n  }\n\n  @if $align {\n    @include align-items($align);\n  }\n}\n\n@mixin transition-definition($definition) {\n  -moz-transition: $definition;\n  -webkit-transition: $definition;\n  -o-transition: $definition;\n  transition: $definition;\n}\n\n@mixin grid-definition($min, $max) {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax($min, $max));\n  grid-gap: .5rem;\n  grid-auto-flow: dense;\n}\n"]}